#!/bin/bash

# Conventional Commits準拠のコミットメッセージチェック (VJアプリ拡張版)
if ! head -1 "$1" | grep -qE "^(feat|fix|docs|style|refactor|perf|test|chore|ci|build)(\(.+?\))?: .{1,}$"; then
  echo "❌ 無効なコミットメッセージフォーマットです！"
  echo ""
  echo "📝 Conventional Commits準拠フォーマット:"
  echo "   <type>(<scope>): <description>"
  echo ""
  echo "🏷️  標準タイプ（Conventional Commits準拠）:"
  echo "   feat:     新機能の追加"
  echo "   fix:      バグ修正"
  echo "   docs:     ドキュメントのみの変更"
  echo "   style:    コードの意味に影響しない変更（フォーマット等）"
  echo "   refactor: バグ修正でも機能追加でもないコード変更"
  echo "   perf:     パフォーマンスを向上させるコード変更" 
  echo "   test:     テストの追加や既存テストの修正"
  echo "   chore:    ビルドプロセスや補助ツール・ライブラリの変更"
  echo "   ci:       CI設定ファイルとスクリプトの変更"
  echo "   build:    ビルドシステムや外部依存関係に影響する変更"
  echo ""
  echo "✅ 例:"
  echo "   feat: add user authentication"
  echo "   feat(auth): implement login functionality"
  echo "   fix: resolve memory leak in video player"
  echo "   docs: update API documentation"
  echo "   style: fix indentation in components"
  echo "   refactor: extract common utility functions"
  echo "   perf: optimize image loading performance"
  echo "   test: add unit tests for user service"
  echo "   chore: update npm dependencies"
  echo "   ci: add automated testing workflow"
  echo "   build: configure webpack for production"
  echo ""
  echo "🔗 詳細: https://www.conventionalcommits.org/"
  exit 1
fi

# コミットメッセージの長さチェック (72文字以内推奨)
if ! head -1 "$1" | grep -qE "^.{1,72}$"; then
  echo "⚠️  コミットメッセージが長すぎます (72文字以内推奨)"
  echo "現在: $(head -1 "$1" | wc -c)文字"
fi
